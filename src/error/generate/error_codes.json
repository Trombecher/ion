{
    "0": {
        "description": "Illegal first byte.",
        "source": "utf-8",
        "hint": "unexpected byte"
    },
    "1": {
        "source": "utf-8",
        "description": "Expected a second byte because the first byte implied it.",
        "context": "in a two byte UTF-8 code point encoding.",
        "hint": "unexpected end of input"
    },
    "2": {
        "source": "utf-8",
        "description": "The second byte is not a continuation byte.",
        "context": "in a two byte UTF-8 code point encoding.",
        "hint": "unexpected byte"
    },
    "3": {
        "source": "utf-8",
        "description": "Expected a second byte because the first byte implied it.",
        "context": "in a three byte UTF-8 code point encoding.",
        "hint": "unexpected end of input"
    },
    "4": {
        "source": "utf-8",
        "description": "The second byte is not a continuation byte.",
        "context": "in a three byte UTF-8 code point encoding.",
        "hint": "unexpected byte"
    },
    "5": {
        "source": "utf-8",
        "description": "Expected a third byte because the first byte implied it.",
        "context": "in a three byte UTF-8 code point encoding.",
        "hint": "unexpected end of input"
    },
    "6": {
        "source": "utf-8",
        "description": "The third byte is not a continuation byte.",
        "context": "in a three byte UTF-8 code point encoding.",
        "hint": "unexpected byte"
    },
    "7": {
        "source": "utf-8",
        "description": "Expected a second byte because the first byte implied it.",
        "context": "in a four byte UTF-8 code point encoding.",
        "hint": "unexpected end of input"
    },
    "8": {
        "source": "utf-8",
        "description": "The second byte is not a continuation byte.",
        "context": "in a four byte UTF-8 code point encoding.",
        "hint": "unexpected byte"
    },
    "9": {
        "source": "utf-8",
        "description": "Expected a third byte because the first byte implied it.",
        "context": "in a four byte UTF-8 code point encoding.",
        "hint": "unexpected end of input"
    },
    "10": {
        "source": "utf-8",
        "description": "The third byte is not a continuation byte.",
        "context": "in a four byte UTF-8 code point encoding.",
        "hint": "unexpected byte"
    },
    "11": {
        "source": "utf-8",
        "description": "Expected a fourth byte because the first byte implied it.",
        "context": "in a four byte UTF-8 code point encoding.",
        "hint": "unexpected end of input"
    },
    "12": {
        "source": "utf-8",
        "description": "The fourth byte is not a continuation byte.",
        "context": "in a four byte UTF-8 code point encoding."
    },
    "13": {
        "source": "lexer",
        "description": "Expected escape character.",
        "hint": "unexpected end of input"
    },
    "14": {
        "source": "lexer",
        "description": "Invalid string escape.",
        "context": "after '\\\\' in a string escape.",
        "hint": "unexpected character"
    },
    "15": {
        "source": "lexer",
        "description": "Cannot use a keyword as a tag name.",
        "context": "in a markup start tag."
    },
    "16": {
        "source": "lexer",
        "description": "Cannot use a keyword as a tag name.",
        "context": "in a markup end tag."
    },
    "17": {
        "source": "lexer",
        "description": "Invalid (alphabetic) digit for decimal number literal. In decimal, you can only use numbers from zero to nine.",
        "context": "while lexing a decimal number literal.",
        "hint": "unexpected character"
    },
    "18": {
        "source": "lexer",
        "description": "Expected a string escape character.",
        "context": "in a string literal.",
        "hint": "unexpected end of input"
    },
    "19": {
        "source": "lexer",
        "description": "Expected something.",
        "context": "in a string literal.",
        "hint": "unexpected end of input"
    },
    "20": {
        "source": "lexer",
        "description": "Non-ASCII characters in identifiers are currently not supported.",
        "context": "while lexing an identifier.",
        "hint": "unexpected character"
    },
    "21": {
        "source": "lexer",
        "description": "Expected first hex digit.",
        "context": "in the first digit of a string literal hex escape code.",
        "hint": "unexpected end of input"
    },
    "22": {
        "source": "lexer",
        "description": "Invalid hex digit (0-9A-F).",
        "context": "in the first digit of a string literal hex escape code.",
        "hint": "unexpected character"
    },
    "23": {
        "source": "lexer",
        "description": "Valid hex digit, but out of range for an ascii character (`0..=0x7F`).",
        "context": "in the first digit of a string literal hex escape code.",
        "hint": "unexpected character"
    },
    "24": {
        "source": "lexer",
        "description": "Expected second hex digit.",
        "context": "in the second digit of a string literal hex escape code.",
        "hint": "unexpected end of input"
    },
    "25": {
        "source": "lexer",
        "description": "Invalid hex digit (0-9A-F).",
        "context": "in the second digit of a string literal hex escape code.",
        "hint": "unexpected character"
    },
    "26": {
        "source": "lexer",
        "description": "Expected '>'.",
        "context": "in a markup end tag.",
        "hint": "unexpected character"
    },
    "27": {
        "source": "lexer",
        "description": "Vine does not have the Rust and C++ like :: path separator. Just use a dot."
    },
    "28": {
        "source": "lexer",
        "description": ".",
        "context": "while trying to match a new token.",
        "hint": "unexpected character"
    },
    "29": {
        "source": "lexer",
        "description": "Expected a number, found an alphabetic character.",
        "context": "while lexing the tail of a floating point decimal number.",
        "hint": "unexpected character"
    },
    "30": {
        "source": "lexer",
        "description": "Expected a character.",
        "context": "while lexing a character literal.",
        "hint": "unexpected end of input"
    },
    "31": {
        "source": "lexer",
        "description": "Expected a single quote to close the character literal.",
        "context": "while lexing a character literal.",
        "hint": "unexpected end of input"
    },
    "32": {
        "source": "lexer",
        "description": "Expected a single quote to close the character literal.",
        "context": "while lexing a character literal.",
        "hint": "unexpected character"
    },
    "33": {
        "source": "lexer",
        "description": "Expected '>'.",
        "context": "in a self-closing markup tag."
    },
    "34": {
        "source": "lexer",
        "description": "Expected '>', '/' or an identifier.",
        "context": "while collecting attributes in a markup start tag."
    },
    "35": {
        "source": "lexer",
        "description": "Expected '='.",
        "context": "while lexing an attribute in a markup start tag."
    },
    "36": {
        "source": "lexer",
        "description": "Expected '\"' or '{'.",
        "context": "while lexing a value in a markup start tag."
    },
    "37": {
        "source": "lexer",
        "description": "Cannot terminate without closing the markup element.",
        "context": "in a markup element (while lexing children).",
        "hint": "unexpected end of input"
    },
    "38": {
        "source": "lexer",
        "description": "Expected '/' or a start tag identifier.",
        "context": "in a markup element (while lexing children).",
        "hint": "unexpected end of input"
    }
}